{"version":3,"sources":["main.coffee"],"names":[],"mappings":"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","file":"main.js","sourceRoot":"/source/","sourcesContent":["# gulp test_coffee && mocha app/Conform/tests/main.js\nexpect = require('chai').expect\nglobal.root_path = '/www/self/mapodofu'\n\nrequire('coffee-script/register')\nrequire(root_path + '/loader_base')\n#require(__dirname + '/../main.coffee')\n\n\nglobal.test_fn =\n\tpass: (v)->\n\t\tv\n\tdelay_pass: (v)->\n\t\tPromise.delay(200).then ()-> v\n\tmutate: (v)->\n\t\tv + 'bob'\n\tdelay_mutate: (v)->\n\t\tPromise.delay(200).then ()-> v + 'bob'\n\treject: (v)->\n\t\tthrow new Error('fail')\n\tdelay_reject: (v)->\n\t\tPromise.delay(200).then ()->\n\t\t\t throw new Error('fail')\n\n\n\n###\nconform = new Conform({test1:'moe', test2:'sue'})\nrules =\n\ttest1:'~test_fn.delay_reject &test_fn.delay_mutate'\n\ttest2:'test_fn.delay_mutate'\nconform.fields_rules(rules).then (o)->\n\tc o\n\tc conform.errors\n###\n\n\n####\ndescribe \"Test Suite\", ()->\n\n\t# Avoid the mocha default suite timeout by setting it higher\n\t@timeout(10000)\n\n\n\tit \"rules string separation\", ()->\n\t\texpect( Conform::compile_rules('bob bob, bob ,bob , bob').length ).to.equal(5)\n\tdescribe \".compile_rule\", ()->\n\t\tit '!a.string', ()->\n\t\t\texpect( Conform::compile_rule('!a.string') ).to.deep.equal( { flags: { break: true }, params: [], fn_path: 'a.string' } )\n\t\tit '!!a.string', ()->\n\t\t\texpect( Conform::compile_rule('!!a.string') ).to.deep.equal( { flags: { break_all: true }, params: [], fn_path: 'a.string' } )\n\t\tit '?!a.above|10', ()->\n\t\t\texpect( Conform::compile_rule('?!a.above|10') ).to.deep.equal( { flags: { optional: true, break: true }, params: [ '10' ], fn_path: 'a.above' } )\n\t\tit '~?&&a.function', ()->\n\t\t\texpect( Conform::compile_rule('~?&&a.function') ).to.deep.equal( { flags: { full_continuity: true, not: true, optional: true }, params: [], fn_path: 'a.function' } )\n\tdescribe \"validation\", ()->\n\t\tit 'mutate', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\tconform.fields_rules({test1:'test_fn.pass test_fn.mutate', test2:'test_fn.pass test_fn.mutate'}).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { test1: 'moebob', test2: 'suebob' } )\n\t\t\t\tdone()\n\t\tit 'mutates', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\tconform.fields_rules({test1:'test_fn.pass test_fn.mutate test_fn.mutate', test2:'test_fn.pass test_fn.mutate test_fn.mutate'}).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { test1: 'moebobbob', test2: 'suebobbob' } )\n\t\t\t\tdone()\n\t\tit 'delayed_mutates', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\tconform.fields_rules({test1:'test_fn.pass test_fn.delay_mutate test_fn.delay_mutate', test2:'test_fn.pass test_fn.delay_mutate test_fn.delay_mutate'}).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { test1: 'moebobbob', test2: 'suebobbob' } )\n\t\t\t\tdone()\n\t\tit 'reject', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'test_fn.pass test_fn.reject test_fn.delay_mutate'\n\t\t\t\ttest2:'test_fn.pass test_fn.reject test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( conform.errors.length ).to.equal( 2 )\n\t\t\t\texpect( conform.field_errors.test1.length ).to.equal( 1 )\n\t\t\t\texpect( conform.field_errors.test2.length ).to.equal( 1 )\n\t\t\t\tdone()\n\t\tit 'delayed reject', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'test_fn.pass test_fn.delay_reject test_fn.delay_mutate'\n\t\t\t\ttest2:'test_fn.pass test_fn.delay_reject test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( conform.errors.length ).to.equal( 2 )\n\t\t\t\texpect( conform.field_errors.test1.length ).to.equal( 1 )\n\t\t\t\texpect( conform.field_errors.test2.length ).to.equal( 1 )\n\t\t\t\tdone()\n\t\tit 'optional reject', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'test_fn.pass ?test_fn.reject test_fn.delay_mutate'\n\t\t\t\ttest2:'test_fn.pass ?test_fn.reject test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { test1: 'moebob', test2: 'suebob' } )\n\t\t\t\texpect( conform.errors.length ).to.equal( 0 )\n\t\t\t\tdone()\n\t\tit 'optional delayed reject', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'test_fn.pass ?test_fn.delay_reject test_fn.delay_mutate'\n\t\t\t\ttest2:'test_fn.pass ?test_fn.delay_reject test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { test1: 'moebob', test2: 'suebob' } )\n\t\t\t\texpect( conform.errors.length ).to.equal( 0 )\n\t\t\t\tdone()\n\n\t\tit 'full continuity without error', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'?!test_fn.reject'\n\t\t\t\ttest2:'&&test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { test2: 'suebob' } )\n\t\t\t\tdone()\n\t\tit 'full continuity with error', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'!test_fn.reject'\n\t\t\t\ttest2:'&&test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { } )\n\t\t\t\tdone()\n\t\tit 'full continuity with delayed error', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'!test_fn.delay_reject'\n\t\t\t\ttest2:'&&test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { } )\n\t\t\t\tdone()\n\t\tit 'continuity with delayed error', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'test_fn.delay_reject &test_fn.delay_mutate'\n\t\t\t\ttest2:'test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { test2: 'suebob' } )\n\t\t\t\texpect( conform.field_errors.test1.length ).to.equal( 1 )\n\t\t\t\tdone()\n\n\t\tit 'not-ed delayed error with continuity', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'~test_fn.delay_reject &test_fn.delay_mutate'\n\t\t\t\ttest2:'test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { test1: 'moebob', test2: 'suebob' } )\n\t\t\t\texpect( conform.errors.length ).to.equal( 0 )\n\t\t\t\tdone()\n\n\t\tit 'break all', (done)->\n\t\t\tconform = new Conform({test1:'moe', test2:'sue'})\n\t\t\trules =\n\t\t\t\ttest1:'!!test_fn.delay_reject'\n\t\t\t\ttest2:'test_fn.delay_mutate'\n\t\t\tconform.fields_rules(rules).then (o)->\n\t\t\t\texpect( o ).to.deep.equal( { } )\n\t\t\t\texpect( conform.errors.length ).to.equal( 1 )\n\t\t\t\tdone()"]}